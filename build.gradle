buildscript {
    ext {
        springBootVersion = '2.0.0.BUILD-SNAPSHOT'
    }
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://repo.spring.io/milestone' }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
    id 'java'
    id 'groovy'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.7.1'
}
apply plugin: 'org.springframework.boot'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile 'org.springframework.boot:spring-boot-starter',

            'org.apache.avro:avro:1.8.1',
            'com.beust:jcommander:1.58'

    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'

    testCompile 'com.github.tomakehurst:wiremock:2.1.11',
            'cglib:cglib-nodep:3.2.4',
            'org.objenesis:objenesis:2.4',
            'org.spockframework:spock-core:1.0-groovy-2.4',
            'org.spockframework:spock-spring:1.0-groovy-2.4',
            'org.springframework.boot:spring-boot-starter-test'
}

jar {
    baseName = 'avro-cli'
    version = '0.0.1-SNAPSHOT'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}
